apply plugin: 'java'
apply plugin: 'maven'

group = 'com.mycompany'
version = '0.0.1-SNAPSHOT'

description = """Velocity Temple"""

sourceCompatibility = 1.6
targetCompatibility = 1.6



repositories {
        
     maven { url "http://repo.fusesource.com/nexus/content/repositories/releases" }
     maven { url "http://repo.fusesource.com/nexus/content/groups/ea" }
     maven { url "http://repo.fusesource.com/nexus/content/repositories/snapshots" }
     maven { url "http://repo1.maven.org/maven2" }
     maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile group: 'org.apache.camel', name: 'camel-core', version:'2.16.0'
    compile group: 'org.apache.camel', name: 'camel-spring', version:'2.16.0'
    compile group: 'org.apache.camel', name: 'camel-jetty', version:'2.16.0'
    compile group: 'org.apache.camel', name: 'camel-velocity', version:'2.16.0'
    compile group: 'org.apache.camel', name: 'camel-ftp', version:'2.16.0'
    compile group: 'org.apache.camel', name: 'camel-http', version:'2.16.0'
    compile group: 'org.apache.camel', name: 'camel-stringtemplate', version:'2.16.0'
    compile group: 'org.apache.camel', name: 'camel-ssh', version:'2.16.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.5'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.5'
    compile group: 'log4j', name: 'log4j', version:'1.2.17'
    compile group: 'com.google.guava', name: 'guava', version:'18.0'
    compile group: 'org.apache.activemq', name: 'activemq-core', version:'5.6.0'
    compile group: 'org.apache.camel', name: 'camel-maven-plugin', version:'2.16.0'
    testCompile group: 'org.apache.camel', name: 'camel-test-spring', version:'2.16.0'
}

// copy jar files to build/libs/lib (see http://stackoverflow.com/questions/21721119/creating-runnable-jar-with-gradle)
task copyJarsToLib (type: Copy) {
    def dirName = "build/libs/lib"
    file(dirName).mkdirs()
//    from configurations.runtime
    from configurations.compile
    into 'build/libs/lib'
    from configurations.testCompile
    into 'build/libs/lib'
}

// make jar executable: see http://stackoverflow.com/questions/21721119/creating-runnable-jar-with-gradle
jar {
    manifest {
        attributes (
	    'Main-Class': 'de.oveits.velocitytemple.MainTest',
	    // add classpath to Manifest; see http://stackoverflow.com/questions/30087427/add-classpath-in-manifest-file-of-jar-in-gradle
	    "Class-Path": 'lib/' + configurations.compile.collect { it.getName() }.join(' lib/')
	    )
    }
}

// see http://stackoverflow.com/questions/10034084/creating-a-jar-of-test-binaries-gradle
task testJar(type: Jar) {
    version = 'test-0.0.1-SNAPSHOT'
    jar {
        manifest {
            attributes (
                'Main-Class': 'de.oveits.velocitytemple.MainTest',
                // add classpath to Manifest; see http://stackoverflow.com/questions/30087427/add-classpath-in-manifest-file-of-jar-in-gradle
                "Class-Path": 'lib/' + configurations.compile.collect { it.getName() }.join(' lib/')
                )
        }
    }
   from sourceSets.test.output
}

// always call copyJarsToLib when building (also called when not needed, e.g. when doing a gradle test? To be tested)
build.dependsOn copyJarsToLib
